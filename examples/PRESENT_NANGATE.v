/* Generated by Yosys 0.8 (git sha1 UNKNOWN, clang 10.0.0 -fPIC -Os) */

(* top =  1  *)
(* src = "present_encrypt.v:28" *)
module PRESENT_ENCRYPT(odat, idat, key, load, clk);
  (* src = "present_encrypt.v:76" *)
  wire [63:0] _0000_;
  (* src = "present_encrypt.v:85" *)
  wire [79:0] _0001_;
  (* src = "present_encrypt.v:94" *)
  wire [4:0] _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  (* src = "present_encrypt.v:70|present_encrypt_sbox.v:25" *)
  wire [3:0] \USBOXKEY.idat ;
  (* src = "present_encrypt.v:70|present_encrypt_sbox.v:24" *)
  (* unused_bits = "0 1 2 3" *)
  wire [3:0] \USBOXKEY.odat ;
  (* src = "present_encrypt.v:33" *)
  input clk;
  (* src = "present_encrypt.v:40" *)
  wire [63:0] dat1;
  (* src = "present_encrypt.v:38" *)
  wire [63:0] dreg;
  (* src = "present_encrypt.v:30" *)
  input [63:0] idat;
  (* src = "present_encrypt.v:41" *)
  wire [79:0] kdat1;
  (* src = "present_encrypt.v:41" *)
  wire [79:0] kdat2;
  (* src = "present_encrypt.v:31" *)
  input [79:0] key;
  (* src = "present_encrypt.v:37" *)
  wire [79:0] kreg;
  (* src = "present_encrypt.v:32" *)
  input load;
  (* src = "present_encrypt.v:29" *)
  output [63:0] odat;
  (* src = "present_encrypt.v:39" *)
  wire [4:0] round;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[0].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[12].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[16].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[20].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[24].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[28].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[32].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[36].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[40].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[44].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[48].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[4].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[52].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[56].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[60].USBOX.idat ;
  (* src = "present_encrypt.v:62|present_encrypt_sbox.v:25" *)
  wire [3:0] \sbox_loop[8].USBOX.idat ;
  INV_X1 _0493_ (
    .A(kreg[18]),
    .ZN(_0053_)
  );
  INV_X1 _0494_ (
    .A(kreg[16]),
    .ZN(_0054_)
  );
  INV_X1 _0495_ (
    .A(kreg[17]),
    .ZN(_0055_)
  );
  INV_X1 _0496_ (
    .A(load),
    .ZN(_0056_)
  );
  INV_X1 _0497_ (
    .A(kreg[15]),
    .ZN(_0057_)
  );
  INV_X1 _0498_ (
    .A(key[78]),
    .ZN(_0058_)
  );
  INV_X1 _0499_ (
    .A(key[79]),
    .ZN(_0059_)
  );
  INV_X1 _0500_ (
    .A(idat[16]),
    .ZN(_0060_)
  );
  INV_X1 _0501_ (
    .A(idat[17]),
    .ZN(_0061_)
  );
  INV_X1 _0502_ (
    .A(idat[20]),
    .ZN(_0062_)
  );
  INV_X1 _0503_ (
    .A(idat[24]),
    .ZN(_0063_)
  );
  INV_X1 _0504_ (
    .A(idat[25]),
    .ZN(_0064_)
  );
  INV_X1 _0505_ (
    .A(idat[28]),
    .ZN(_0065_)
  );
  INV_X1 _0506_ (
    .A(idat[29]),
    .ZN(_0066_)
  );
  INV_X1 _0507_ (
    .A(idat[53]),
    .ZN(_0067_)
  );
  XOR2_X1 _0508_ (
    .A(dreg[10]),
    .B(kreg[26]),
    .Z(odat[10])
  );
  XNOR2_X1 _0509_ (
    .A(dreg[8]),
    .B(kreg[24]),
    .ZN(_0068_)
  );
  INV_X1 _0510_ (
    .A(_0068_),
    .ZN(odat[8])
  );
  XOR2_X1 _0511_ (
    .A(dreg[9]),
    .B(kreg[25]),
    .Z(odat[9])
  );
  XOR2_X1 _0512_ (
    .A(dreg[14]),
    .B(kreg[30]),
    .Z(odat[14])
  );
  XOR2_X1 _0513_ (
    .A(dreg[15]),
    .B(kreg[31]),
    .Z(odat[15])
  );
  XNOR2_X1 _0514_ (
    .A(dreg[12]),
    .B(kreg[28]),
    .ZN(_0069_)
  );
  INV_X1 _0515_ (
    .A(_0069_),
    .ZN(odat[12])
  );
  XOR2_X1 _0516_ (
    .A(dreg[13]),
    .B(kreg[29]),
    .Z(odat[13])
  );
  XNOR2_X1 _0517_ (
    .A(kreg[34]),
    .B(dreg[18]),
    .ZN(_0070_)
  );
  INV_X1 _0518_ (
    .A(_0070_),
    .ZN(odat[18])
  );
  XOR2_X1 _0519_ (
    .A(kreg[35]),
    .B(dreg[19]),
    .Z(odat[19])
  );
  XOR2_X1 _0520_ (
    .A(dreg[16]),
    .B(kreg[32]),
    .Z(odat[16])
  );
  XNOR2_X1 _0521_ (
    .A(dreg[17]),
    .B(kreg[33]),
    .ZN(_0071_)
  );
  INV_X1 _0522_ (
    .A(_0071_),
    .ZN(odat[17])
  );
  XOR2_X1 _0523_ (
    .A(kreg[38]),
    .B(dreg[22]),
    .Z(odat[22])
  );
  INV_X1 _0524_ (
    .A(odat[22]),
    .ZN(_0072_)
  );
  XNOR2_X1 _0525_ (
    .A(dreg[23]),
    .B(kreg[39]),
    .ZN(_0073_)
  );
  INV_X1 _0526_ (
    .A(_0073_),
    .ZN(odat[23])
  );
  XNOR2_X1 _0527_ (
    .A(kreg[36]),
    .B(dreg[20]),
    .ZN(_0074_)
  );
  INV_X1 _0528_ (
    .A(_0074_),
    .ZN(odat[20])
  );
  XOR2_X1 _0529_ (
    .A(kreg[37]),
    .B(dreg[21]),
    .Z(odat[21])
  );
  XOR2_X1 _0530_ (
    .A(dreg[26]),
    .B(kreg[42]),
    .Z(odat[26])
  );
  XOR2_X1 _0531_ (
    .A(dreg[27]),
    .B(kreg[43]),
    .Z(odat[27])
  );
  XNOR2_X1 _0532_ (
    .A(dreg[24]),
    .B(kreg[40]),
    .ZN(_0075_)
  );
  INV_X1 _0533_ (
    .A(_0075_),
    .ZN(odat[24])
  );
  XOR2_X1 _0534_ (
    .A(dreg[25]),
    .B(kreg[41]),
    .Z(odat[25])
  );
  XOR2_X1 _0535_ (
    .A(dreg[30]),
    .B(kreg[46]),
    .Z(odat[30])
  );
  XOR2_X1 _0536_ (
    .A(dreg[31]),
    .B(kreg[47]),
    .Z(odat[31])
  );
  XNOR2_X1 _0537_ (
    .A(dreg[28]),
    .B(kreg[44]),
    .ZN(_0076_)
  );
  INV_X1 _0538_ (
    .A(_0076_),
    .ZN(odat[28])
  );
  XOR2_X1 _0539_ (
    .A(dreg[29]),
    .B(kreg[45]),
    .Z(odat[29])
  );
  INV_X1 _0540_ (
    .A(odat[29]),
    .ZN(_0077_)
  );
  XOR2_X1 _0541_ (
    .A(dreg[34]),
    .B(kreg[50]),
    .Z(odat[34])
  );
  XNOR2_X1 _0542_ (
    .A(dreg[35]),
    .B(kreg[51]),
    .ZN(_0078_)
  );
  INV_X1 _0543_ (
    .A(_0078_),
    .ZN(odat[35])
  );
  XNOR2_X1 _0544_ (
    .A(dreg[32]),
    .B(kreg[48]),
    .ZN(_0079_)
  );
  INV_X1 _0545_ (
    .A(_0079_),
    .ZN(odat[32])
  );
  XOR2_X1 _0546_ (
    .A(dreg[33]),
    .B(kreg[49]),
    .Z(odat[33])
  );
  XOR2_X1 _0547_ (
    .A(dreg[38]),
    .B(kreg[54]),
    .Z(odat[38])
  );
  XNOR2_X1 _0548_ (
    .A(dreg[39]),
    .B(kreg[55]),
    .ZN(_0080_)
  );
  INV_X1 _0549_ (
    .A(_0080_),
    .ZN(odat[39])
  );
  XNOR2_X1 _0550_ (
    .A(dreg[36]),
    .B(kreg[52]),
    .ZN(_0081_)
  );
  INV_X1 _0551_ (
    .A(_0081_),
    .ZN(odat[36])
  );
  XOR2_X1 _0552_ (
    .A(dreg[37]),
    .B(kreg[53]),
    .Z(odat[37])
  );
  XOR2_X1 _0553_ (
    .A(dreg[42]),
    .B(kreg[58]),
    .Z(odat[42])
  );
  XOR2_X1 _0554_ (
    .A(dreg[43]),
    .B(kreg[59]),
    .Z(odat[43])
  );
  XNOR2_X1 _0555_ (
    .A(dreg[40]),
    .B(kreg[56]),
    .ZN(_0082_)
  );
  INV_X1 _0556_ (
    .A(_0082_),
    .ZN(odat[40])
  );
  XOR2_X1 _0557_ (
    .A(dreg[41]),
    .B(kreg[57]),
    .Z(odat[41])
  );
  XOR2_X1 _0558_ (
    .A(dreg[46]),
    .B(kreg[62]),
    .Z(odat[46])
  );
  INV_X1 _0559_ (
    .A(odat[46]),
    .ZN(_0083_)
  );
  XOR2_X1 _0560_ (
    .A(dreg[47]),
    .B(kreg[63]),
    .Z(odat[47])
  );
  XOR2_X1 _0561_ (
    .A(dreg[45]),
    .B(kreg[61]),
    .Z(odat[45])
  );
  XNOR2_X1 _0562_ (
    .A(dreg[44]),
    .B(kreg[60]),
    .ZN(_0084_)
  );
  INV_X1 _0563_ (
    .A(_0084_),
    .ZN(odat[44])
  );
  XOR2_X1 _0564_ (
    .A(dreg[50]),
    .B(kreg[66]),
    .Z(odat[50])
  );
  XNOR2_X1 _0565_ (
    .A(dreg[51]),
    .B(kreg[67]),
    .ZN(_0085_)
  );
  INV_X1 _0566_ (
    .A(_0085_),
    .ZN(odat[51])
  );
  XNOR2_X1 _0567_ (
    .A(dreg[48]),
    .B(kreg[64]),
    .ZN(_0086_)
  );
  INV_X1 _0568_ (
    .A(_0086_),
    .ZN(odat[48])
  );
  XOR2_X1 _0569_ (
    .A(dreg[49]),
    .B(kreg[65]),
    .Z(odat[49])
  );
  XOR2_X1 _0570_ (
    .A(dreg[54]),
    .B(kreg[70]),
    .Z(odat[54])
  );
  XNOR2_X1 _0571_ (
    .A(dreg[55]),
    .B(kreg[71]),
    .ZN(_0087_)
  );
  INV_X1 _0572_ (
    .A(_0087_),
    .ZN(odat[55])
  );
  XNOR2_X1 _0573_ (
    .A(dreg[52]),
    .B(kreg[68]),
    .ZN(_0088_)
  );
  INV_X1 _0574_ (
    .A(_0088_),
    .ZN(odat[52])
  );
  XOR2_X1 _0575_ (
    .A(dreg[53]),
    .B(kreg[69]),
    .Z(odat[53])
  );
  XOR2_X1 _0576_ (
    .A(dreg[58]),
    .B(kreg[74]),
    .Z(odat[58])
  );
  XOR2_X1 _0577_ (
    .A(dreg[59]),
    .B(kreg[75]),
    .Z(odat[59])
  );
  XNOR2_X1 _0578_ (
    .A(dreg[56]),
    .B(kreg[72]),
    .ZN(_0089_)
  );
  INV_X1 _0579_ (
    .A(_0089_),
    .ZN(odat[56])
  );
  XOR2_X1 _0580_ (
    .A(dreg[57]),
    .B(kreg[73]),
    .Z(odat[57])
  );
  XOR2_X1 _0581_ (
    .A(dreg[62]),
    .B(kreg[78]),
    .Z(odat[62])
  );
  XOR2_X1 _0582_ (
    .A(dreg[63]),
    .B(kreg[79]),
    .Z(odat[63])
  );
  XNOR2_X1 _0583_ (
    .A(dreg[60]),
    .B(kreg[76]),
    .ZN(_0090_)
  );
  INV_X1 _0584_ (
    .A(_0090_),
    .ZN(odat[60])
  );
  XOR2_X1 _0585_ (
    .A(dreg[61]),
    .B(kreg[77]),
    .Z(odat[61])
  );
  XOR2_X1 _0586_ (
    .A(dreg[6]),
    .B(kreg[22]),
    .Z(odat[6])
  );
  XNOR2_X1 _0587_ (
    .A(dreg[7]),
    .B(kreg[23]),
    .ZN(_0091_)
  );
  INV_X1 _0588_ (
    .A(_0091_),
    .ZN(odat[7])
  );
  XNOR2_X1 _0589_ (
    .A(dreg[4]),
    .B(kreg[20]),
    .ZN(_0092_)
  );
  INV_X1 _0590_ (
    .A(_0092_),
    .ZN(odat[4])
  );
  XOR2_X1 _0591_ (
    .A(dreg[5]),
    .B(kreg[21]),
    .Z(odat[5])
  );
  XNOR2_X1 _0592_ (
    .A(dreg[2]),
    .B(kreg[18]),
    .ZN(_0093_)
  );
  INV_X1 _0593_ (
    .A(_0093_),
    .ZN(odat[2])
  );
  XNOR2_X1 _0594_ (
    .A(dreg[3]),
    .B(kreg[19]),
    .ZN(_0094_)
  );
  INV_X1 _0595_ (
    .A(_0094_),
    .ZN(odat[3])
  );
  XOR2_X1 _0596_ (
    .A(dreg[0]),
    .B(kreg[16]),
    .Z(odat[0])
  );
  XOR2_X1 _0597_ (
    .A(dreg[1]),
    .B(kreg[17]),
    .Z(odat[1])
  );
  NAND2_X1 _0598_ (
    .A1(_0056_),
    .A2(round[0]),
    .ZN(_0002_[0])
  );
  OAI21_X1 _0599_ (
    .A(_0056_),
    .B1(round[0]),
    .B2(round[1]),
    .ZN(_0095_)
  );
  AOI21_X1 _0600_ (
    .A(_0095_),
    .B1(round[1]),
    .B2(round[0]),
    .ZN(_0002_[1])
  );
  AND3_X1 _0601_ (
    .A1(round[0]),
    .A2(round[1]),
    .A3(round[2]),
    .ZN(_0096_)
  );
  AOI21_X1 _0602_ (
    .A(round[2]),
    .B1(round[1]),
    .B2(round[0]),
    .ZN(_0097_)
  );
  NOR3_X1 _0603_ (
    .A1(load),
    .A2(_0096_),
    .A3(_0097_),
    .ZN(_0002_[2])
  );
  AND2_X1 _0604_ (
    .A1(round[3]),
    .A2(_0096_),
    .ZN(_0098_)
  );
  OAI21_X1 _0605_ (
    .A(_0056_),
    .B1(round[3]),
    .B2(_0096_),
    .ZN(_0099_)
  );
  NOR2_X1 _0606_ (
    .A1(_0098_),
    .A2(_0099_),
    .ZN(_0002_[3])
  );
  OAI21_X1 _0607_ (
    .A(_0056_),
    .B1(round[4]),
    .B2(_0098_),
    .ZN(_0100_)
  );
  AOI21_X1 _0608_ (
    .A(_0100_),
    .B1(_0098_),
    .B2(round[4]),
    .ZN(_0002_[4])
  );
  MUX2_X1 _0609_ (
    .A(kreg[19]),
    .B(key[0]),
    .S(load),
    .Z(_0001_[0])
  );
  MUX2_X1 _0610_ (
    .A(kreg[20]),
    .B(key[1]),
    .S(load),
    .Z(_0001_[1])
  );
  MUX2_X1 _0611_ (
    .A(kreg[21]),
    .B(key[2]),
    .S(load),
    .Z(_0001_[2])
  );
  MUX2_X1 _0612_ (
    .A(kreg[22]),
    .B(key[3]),
    .S(load),
    .Z(_0001_[3])
  );
  MUX2_X1 _0613_ (
    .A(kreg[23]),
    .B(key[4]),
    .S(load),
    .Z(_0001_[4])
  );
  MUX2_X1 _0614_ (
    .A(kreg[24]),
    .B(key[5]),
    .S(load),
    .Z(_0001_[5])
  );
  MUX2_X1 _0615_ (
    .A(kreg[25]),
    .B(key[6]),
    .S(load),
    .Z(_0001_[6])
  );
  MUX2_X1 _0616_ (
    .A(kreg[26]),
    .B(key[7]),
    .S(load),
    .Z(_0001_[7])
  );
  MUX2_X1 _0617_ (
    .A(kreg[27]),
    .B(key[8]),
    .S(load),
    .Z(_0001_[8])
  );
  MUX2_X1 _0618_ (
    .A(kreg[28]),
    .B(key[9]),
    .S(load),
    .Z(_0001_[9])
  );
  MUX2_X1 _0619_ (
    .A(kreg[29]),
    .B(key[10]),
    .S(load),
    .Z(_0001_[10])
  );
  MUX2_X1 _0620_ (
    .A(kreg[30]),
    .B(key[11]),
    .S(load),
    .Z(_0001_[11])
  );
  MUX2_X1 _0621_ (
    .A(kreg[31]),
    .B(key[12]),
    .S(load),
    .Z(_0001_[12])
  );
  MUX2_X1 _0622_ (
    .A(kreg[32]),
    .B(key[13]),
    .S(load),
    .Z(_0001_[13])
  );
  MUX2_X1 _0623_ (
    .A(kreg[33]),
    .B(key[14]),
    .S(load),
    .Z(_0001_[14])
  );
  XOR2_X1 _0624_ (
    .A(kreg[34]),
    .B(round[0]),
    .Z(_0101_)
  );
  MUX2_X1 _0625_ (
    .A(key[15]),
    .B(_0101_),
    .S(_0056_),
    .Z(_0001_[15])
  );
  XOR2_X1 _0626_ (
    .A(kreg[35]),
    .B(round[1]),
    .Z(_0102_)
  );
  MUX2_X1 _0627_ (
    .A(key[16]),
    .B(_0102_),
    .S(_0056_),
    .Z(_0001_[16])
  );
  XOR2_X1 _0628_ (
    .A(kreg[36]),
    .B(round[2]),
    .Z(_0103_)
  );
  MUX2_X1 _0629_ (
    .A(key[17]),
    .B(_0103_),
    .S(_0056_),
    .Z(_0001_[17])
  );
  XOR2_X1 _0630_ (
    .A(kreg[37]),
    .B(round[3]),
    .Z(_0104_)
  );
  MUX2_X1 _0631_ (
    .A(key[18]),
    .B(_0104_),
    .S(_0056_),
    .Z(_0001_[18])
  );
  XOR2_X1 _0632_ (
    .A(kreg[38]),
    .B(round[4]),
    .Z(_0105_)
  );
  MUX2_X1 _0633_ (
    .A(key[19]),
    .B(_0105_),
    .S(_0056_),
    .Z(_0001_[19])
  );
  MUX2_X1 _0634_ (
    .A(kreg[39]),
    .B(key[20]),
    .S(load),
    .Z(_0001_[20])
  );
  MUX2_X1 _0635_ (
    .A(kreg[40]),
    .B(key[21]),
    .S(load),
    .Z(_0001_[21])
  );
  MUX2_X1 _0636_ (
    .A(kreg[41]),
    .B(key[22]),
    .S(load),
    .Z(_0001_[22])
  );
  MUX2_X1 _0637_ (
    .A(kreg[42]),
    .B(key[23]),
    .S(load),
    .Z(_0001_[23])
  );
  MUX2_X1 _0638_ (
    .A(kreg[43]),
    .B(key[24]),
    .S(load),
    .Z(_0001_[24])
  );
  MUX2_X1 _0639_ (
    .A(kreg[44]),
    .B(key[25]),
    .S(load),
    .Z(_0001_[25])
  );
  MUX2_X1 _0640_ (
    .A(kreg[45]),
    .B(key[26]),
    .S(load),
    .Z(_0001_[26])
  );
  MUX2_X1 _0641_ (
    .A(kreg[46]),
    .B(key[27]),
    .S(load),
    .Z(_0001_[27])
  );
  MUX2_X1 _0642_ (
    .A(kreg[47]),
    .B(key[28]),
    .S(load),
    .Z(_0001_[28])
  );
  MUX2_X1 _0643_ (
    .A(kreg[48]),
    .B(key[29]),
    .S(load),
    .Z(_0001_[29])
  );
  MUX2_X1 _0644_ (
    .A(kreg[49]),
    .B(key[30]),
    .S(load),
    .Z(_0001_[30])
  );
  MUX2_X1 _0645_ (
    .A(kreg[50]),
    .B(key[31]),
    .S(load),
    .Z(_0001_[31])
  );
  MUX2_X1 _0646_ (
    .A(kreg[51]),
    .B(key[32]),
    .S(load),
    .Z(_0001_[32])
  );
  MUX2_X1 _0647_ (
    .A(kreg[52]),
    .B(key[33]),
    .S(load),
    .Z(_0001_[33])
  );
  MUX2_X1 _0648_ (
    .A(kreg[53]),
    .B(key[34]),
    .S(load),
    .Z(_0001_[34])
  );
  MUX2_X1 _0649_ (
    .A(kreg[54]),
    .B(key[35]),
    .S(load),
    .Z(_0001_[35])
  );
  MUX2_X1 _0650_ (
    .A(kreg[55]),
    .B(key[36]),
    .S(load),
    .Z(_0001_[36])
  );
  MUX2_X1 _0651_ (
    .A(kreg[56]),
    .B(key[37]),
    .S(load),
    .Z(_0001_[37])
  );
  MUX2_X1 _0652_ (
    .A(kreg[57]),
    .B(key[38]),
    .S(load),
    .Z(_0001_[38])
  );
  MUX2_X1 _0653_ (
    .A(kreg[58]),
    .B(key[39]),
    .S(load),
    .Z(_0001_[39])
  );
  MUX2_X1 _0654_ (
    .A(kreg[59]),
    .B(key[40]),
    .S(load),
    .Z(_0001_[40])
  );
  MUX2_X1 _0655_ (
    .A(kreg[60]),
    .B(key[41]),
    .S(load),
    .Z(_0001_[41])
  );
  MUX2_X1 _0656_ (
    .A(kreg[61]),
    .B(key[42]),
    .S(load),
    .Z(_0001_[42])
  );
  MUX2_X1 _0657_ (
    .A(kreg[62]),
    .B(key[43]),
    .S(load),
    .Z(_0001_[43])
  );
  MUX2_X1 _0658_ (
    .A(kreg[63]),
    .B(key[44]),
    .S(load),
    .Z(_0001_[44])
  );
  MUX2_X1 _0659_ (
    .A(kreg[64]),
    .B(key[45]),
    .S(load),
    .Z(_0001_[45])
  );
  MUX2_X1 _0660_ (
    .A(kreg[65]),
    .B(key[46]),
    .S(load),
    .Z(_0001_[46])
  );
  MUX2_X1 _0661_ (
    .A(kreg[66]),
    .B(key[47]),
    .S(load),
    .Z(_0001_[47])
  );
  MUX2_X1 _0662_ (
    .A(kreg[67]),
    .B(key[48]),
    .S(load),
    .Z(_0001_[48])
  );
  MUX2_X1 _0663_ (
    .A(kreg[68]),
    .B(key[49]),
    .S(load),
    .Z(_0001_[49])
  );
  MUX2_X1 _0664_ (
    .A(kreg[69]),
    .B(key[50]),
    .S(load),
    .Z(_0001_[50])
  );
  MUX2_X1 _0665_ (
    .A(kreg[70]),
    .B(key[51]),
    .S(load),
    .Z(_0001_[51])
  );
  MUX2_X1 _0666_ (
    .A(kreg[71]),
    .B(key[52]),
    .S(load),
    .Z(_0001_[52])
  );
  MUX2_X1 _0667_ (
    .A(kreg[72]),
    .B(key[53]),
    .S(load),
    .Z(_0001_[53])
  );
  MUX2_X1 _0668_ (
    .A(kreg[73]),
    .B(key[54]),
    .S(load),
    .Z(_0001_[54])
  );
  MUX2_X1 _0669_ (
    .A(kreg[74]),
    .B(key[55]),
    .S(load),
    .Z(_0001_[55])
  );
  MUX2_X1 _0670_ (
    .A(kreg[75]),
    .B(key[56]),
    .S(load),
    .Z(_0001_[56])
  );
  MUX2_X1 _0671_ (
    .A(kreg[76]),
    .B(key[57]),
    .S(load),
    .Z(_0001_[57])
  );
  MUX2_X1 _0672_ (
    .A(kreg[77]),
    .B(key[58]),
    .S(load),
    .Z(_0001_[58])
  );
  MUX2_X1 _0673_ (
    .A(kreg[78]),
    .B(key[59]),
    .S(load),
    .Z(_0001_[59])
  );
  MUX2_X1 _0674_ (
    .A(kreg[79]),
    .B(key[60]),
    .S(load),
    .Z(_0001_[60])
  );
  MUX2_X1 _0675_ (
    .A(kreg[0]),
    .B(key[61]),
    .S(load),
    .Z(_0001_[61])
  );
  MUX2_X1 _0676_ (
    .A(kreg[1]),
    .B(key[62]),
    .S(load),
    .Z(_0001_[62])
  );
  MUX2_X1 _0677_ (
    .A(kreg[2]),
    .B(key[63]),
    .S(load),
    .Z(_0001_[63])
  );
  MUX2_X1 _0678_ (
    .A(kreg[3]),
    .B(key[64]),
    .S(load),
    .Z(_0001_[64])
  );
  MUX2_X1 _0679_ (
    .A(kreg[4]),
    .B(key[65]),
    .S(load),
    .Z(_0001_[65])
  );
  MUX2_X1 _0680_ (
    .A(kreg[5]),
    .B(key[66]),
    .S(load),
    .Z(_0001_[66])
  );
  MUX2_X1 _0681_ (
    .A(kreg[6]),
    .B(key[67]),
    .S(load),
    .Z(_0001_[67])
  );
  MUX2_X1 _0682_ (
    .A(kreg[7]),
    .B(key[68]),
    .S(load),
    .Z(_0001_[68])
  );
  MUX2_X1 _0683_ (
    .A(kreg[8]),
    .B(key[69]),
    .S(load),
    .Z(_0001_[69])
  );
  MUX2_X1 _0684_ (
    .A(kreg[9]),
    .B(key[70]),
    .S(load),
    .Z(_0001_[70])
  );
  MUX2_X1 _0685_ (
    .A(kreg[10]),
    .B(key[71]),
    .S(load),
    .Z(_0001_[71])
  );
  MUX2_X1 _0686_ (
    .A(kreg[11]),
    .B(key[72]),
    .S(load),
    .Z(_0001_[72])
  );
  MUX2_X1 _0687_ (
    .A(kreg[12]),
    .B(key[73]),
    .S(load),
    .Z(_0001_[73])
  );
  MUX2_X1 _0688_ (
    .A(kreg[13]),
    .B(key[74]),
    .S(load),
    .Z(_0001_[74])
  );
  MUX2_X1 _0689_ (
    .A(kreg[14]),
    .B(key[75]),
    .S(load),
    .Z(_0001_[75])
  );
  NOR2_X1 _0690_ (
    .A1(kreg[16]),
    .A2(_0055_),
    .ZN(_0106_)
  );
  NOR2_X1 _0691_ (
    .A1(_0053_),
    .A2(_0057_),
    .ZN(_0107_)
  );
  XOR2_X1 _0692_ (
    .A(kreg[18]),
    .B(kreg[15]),
    .Z(_0108_)
  );
  NAND2_X1 _0693_ (
    .A1(_0053_),
    .A2(_0055_),
    .ZN(_0109_)
  );
  NAND2_X1 _0694_ (
    .A1(_0004_),
    .A2(_0003_),
    .ZN(_0110_)
  );
  OAI21_X1 _0695_ (
    .A(_0056_),
    .B1(_0109_),
    .B2(_0110_),
    .ZN(_0111_)
  );
  XNOR2_X1 _0696_ (
    .A(_0106_),
    .B(_0108_),
    .ZN(_0112_)
  );
  NAND2_X1 _0697_ (
    .A1(load),
    .A2(key[76]),
    .ZN(_0113_)
  );
  OAI21_X1 _0698_ (
    .A(_0113_),
    .B1(_0112_),
    .B2(_0111_),
    .ZN(_0001_[76])
  );
  NAND2_X1 _0699_ (
    .A1(load),
    .A2(key[77]),
    .ZN(_0114_)
  );
  AOI211_X1 _0700_ (
    .A(_0053_),
    .B(kreg[17]),
    .C1(kreg[15]),
    .C2(kreg[16]),
    .ZN(_0115_)
  );
  AOI211_X1 _0701_ (
    .A(kreg[18]),
    .B(_0054_),
    .C1(kreg[17]),
    .C2(kreg[15]),
    .ZN(_0116_)
  );
  AOI211_X1 _0702_ (
    .A(_0115_),
    .B(_0116_),
    .C1(kreg[17]),
    .C2(_0107_),
    .ZN(_0117_)
  );
  OAI21_X1 _0703_ (
    .A(_0114_),
    .B1(_0117_),
    .B2(_0111_),
    .ZN(_0001_[77])
  );
  XOR2_X1 _0704_ (
    .A(kreg[17]),
    .B(kreg[15]),
    .Z(_0118_)
  );
  NOR3_X1 _0705_ (
    .A1(_0054_),
    .A2(_0107_),
    .A3(_0118_),
    .ZN(_0119_)
  );
  OAI21_X1 _0706_ (
    .A(_0054_),
    .B1(kreg[17]),
    .B2(kreg[15]),
    .ZN(_0120_)
  );
  AOI21_X1 _0707_ (
    .A(_0120_),
    .B1(kreg[17]),
    .B2(_0053_),
    .ZN(_0121_)
  );
  NOR3_X1 _0708_ (
    .A1(_0111_),
    .A2(_0119_),
    .A3(_0121_),
    .ZN(_0122_)
  );
  AOI21_X1 _0709_ (
    .A(_0122_),
    .B1(_0058_),
    .B2(load),
    .ZN(_0001_[78])
  );
  NOR3_X1 _0710_ (
    .A1(_0054_),
    .A2(_0057_),
    .A3(_0109_),
    .ZN(_0123_)
  );
  AND3_X1 _0711_ (
    .A1(kreg[18]),
    .A2(_0055_),
    .A3(_0110_),
    .ZN(_0124_)
  );
  AOI211_X1 _0712_ (
    .A(kreg[18]),
    .B(_0055_),
    .C1(kreg[15]),
    .C2(_0004_),
    .ZN(_0125_)
  );
  NOR4_X1 _0713_ (
    .A1(_0111_),
    .A2(_0123_),
    .A3(_0124_),
    .A4(_0125_),
    .ZN(_0126_)
  );
  AOI21_X1 _0714_ (
    .A(_0126_),
    .B1(_0059_),
    .B2(load),
    .ZN(_0001_[79])
  );
  NOR2_X1 _0715_ (
    .A1(odat[2]),
    .A2(odat[0]),
    .ZN(_0127_)
  );
  AND2_X1 _0716_ (
    .A1(odat[0]),
    .A2(odat[1]),
    .ZN(_0128_)
  );
  OAI21_X1 _0717_ (
    .A(odat[2]),
    .B1(odat[0]),
    .B2(odat[1]),
    .ZN(_0129_)
  );
  OAI22_X1 _0718_ (
    .A1(odat[2]),
    .A2(odat[0]),
    .B1(_0128_),
    .B2(_0129_),
    .ZN(_0130_)
  );
  XNOR2_X1 _0719_ (
    .A(odat[3]),
    .B(_0130_),
    .ZN(_0131_)
  );
  MUX2_X1 _0720_ (
    .A(idat[0]),
    .B(_0131_),
    .S(_0056_),
    .Z(_0000_[0])
  );
  NAND2_X1 _0721_ (
    .A1(odat[4]),
    .A2(odat[5]),
    .ZN(_0132_)
  );
  XNOR2_X1 _0722_ (
    .A(odat[4]),
    .B(odat[5]),
    .ZN(_0133_)
  );
  NOR2_X1 _0723_ (
    .A1(odat[6]),
    .A2(_0092_),
    .ZN(_0134_)
  );
  AOI21_X1 _0724_ (
    .A(_0134_),
    .B1(_0133_),
    .B2(odat[6]),
    .ZN(_0135_)
  );
  XNOR2_X1 _0725_ (
    .A(odat[7]),
    .B(_0135_),
    .ZN(_0136_)
  );
  MUX2_X1 _0726_ (
    .A(idat[1]),
    .B(_0136_),
    .S(_0056_),
    .Z(_0000_[1])
  );
  XOR2_X1 _0727_ (
    .A(kreg[27]),
    .B(dreg[11]),
    .Z(odat[11])
  );
  NAND2_X1 _0728_ (
    .A1(odat[8]),
    .A2(odat[9]),
    .ZN(_0137_)
  );
  OR2_X1 _0729_ (
    .A1(odat[10]),
    .A2(odat[8]),
    .ZN(_0138_)
  );
  AOI21_X1 _0730_ (
    .A(odat[9]),
    .B1(odat[8]),
    .B2(odat[10]),
    .ZN(_0139_)
  );
  AOI22_X1 _0731_ (
    .A1(odat[8]),
    .A2(odat[9]),
    .B1(_0138_),
    .B2(_0139_),
    .ZN(_0140_)
  );
  XNOR2_X1 _0732_ (
    .A(odat[11]),
    .B(_0140_),
    .ZN(_0141_)
  );
  MUX2_X1 _0733_ (
    .A(idat[2]),
    .B(_0141_),
    .S(_0056_),
    .Z(_0000_[2])
  );
  NAND2_X1 _0734_ (
    .A1(odat[12]),
    .A2(odat[13]),
    .ZN(_0142_)
  );
  XNOR2_X1 _0735_ (
    .A(odat[12]),
    .B(odat[13]),
    .ZN(_0143_)
  );
  NOR2_X1 _0736_ (
    .A1(odat[14]),
    .A2(_0069_),
    .ZN(_0144_)
  );
  AOI21_X1 _0737_ (
    .A(_0144_),
    .B1(_0143_),
    .B2(odat[14]),
    .ZN(_0145_)
  );
  XNOR2_X1 _0738_ (
    .A(odat[15]),
    .B(_0145_),
    .ZN(_0146_)
  );
  MUX2_X1 _0739_ (
    .A(idat[3]),
    .B(_0146_),
    .S(_0056_),
    .Z(_0000_[3])
  );
  NOR2_X1 _0740_ (
    .A1(odat[18]),
    .A2(odat[16]),
    .ZN(_0147_)
  );
  NOR2_X1 _0741_ (
    .A1(odat[16]),
    .A2(odat[17]),
    .ZN(_0148_)
  );
  AND2_X1 _0742_ (
    .A1(odat[16]),
    .A2(odat[17]),
    .ZN(_0149_)
  );
  XNOR2_X1 _0743_ (
    .A(odat[16]),
    .B(_0071_),
    .ZN(_0150_)
  );
  AOI21_X1 _0744_ (
    .A(_0147_),
    .B1(_0150_),
    .B2(odat[18]),
    .ZN(_0151_)
  );
  XOR2_X1 _0745_ (
    .A(odat[19]),
    .B(_0151_),
    .Z(_0152_)
  );
  MUX2_X1 _0746_ (
    .A(idat[4]),
    .B(_0152_),
    .S(_0056_),
    .Z(_0000_[4])
  );
  NOR2_X1 _0747_ (
    .A1(odat[22]),
    .A2(odat[20]),
    .ZN(_0153_)
  );
  NOR2_X1 _0748_ (
    .A1(odat[20]),
    .A2(odat[21]),
    .ZN(_0154_)
  );
  XNOR2_X1 _0749_ (
    .A(_0074_),
    .B(odat[21]),
    .ZN(_0155_)
  );
  AOI21_X1 _0750_ (
    .A(_0153_),
    .B1(_0155_),
    .B2(odat[22]),
    .ZN(_0156_)
  );
  XNOR2_X1 _0751_ (
    .A(_0073_),
    .B(_0156_),
    .ZN(_0157_)
  );
  MUX2_X1 _0752_ (
    .A(idat[5]),
    .B(_0157_),
    .S(_0056_),
    .Z(_0000_[5])
  );
  NAND2_X1 _0753_ (
    .A1(odat[24]),
    .A2(odat[25]),
    .ZN(_0158_)
  );
  XNOR2_X1 _0754_ (
    .A(odat[24]),
    .B(odat[25]),
    .ZN(_0159_)
  );
  NOR2_X1 _0755_ (
    .A1(odat[26]),
    .A2(_0075_),
    .ZN(_0160_)
  );
  AOI21_X1 _0756_ (
    .A(_0160_),
    .B1(_0159_),
    .B2(odat[26]),
    .ZN(_0161_)
  );
  XNOR2_X1 _0757_ (
    .A(odat[27]),
    .B(_0161_),
    .ZN(_0162_)
  );
  MUX2_X1 _0758_ (
    .A(idat[6]),
    .B(_0162_),
    .S(_0056_),
    .Z(_0000_[6])
  );
  NAND2_X1 _0759_ (
    .A1(odat[28]),
    .A2(odat[29]),
    .ZN(_0163_)
  );
  XNOR2_X1 _0760_ (
    .A(odat[28]),
    .B(odat[29]),
    .ZN(_0164_)
  );
  NOR2_X1 _0761_ (
    .A1(odat[30]),
    .A2(_0076_),
    .ZN(_0165_)
  );
  AOI21_X1 _0762_ (
    .A(_0165_),
    .B1(_0164_),
    .B2(odat[30]),
    .ZN(_0166_)
  );
  XNOR2_X1 _0763_ (
    .A(odat[31]),
    .B(_0166_),
    .ZN(_0167_)
  );
  MUX2_X1 _0764_ (
    .A(idat[7]),
    .B(_0167_),
    .S(_0056_),
    .Z(_0000_[7])
  );
  NAND2_X1 _0765_ (
    .A1(odat[32]),
    .A2(odat[33]),
    .ZN(_0168_)
  );
  XNOR2_X1 _0766_ (
    .A(odat[32]),
    .B(odat[33]),
    .ZN(_0169_)
  );
  NOR2_X1 _0767_ (
    .A1(odat[34]),
    .A2(_0079_),
    .ZN(_0170_)
  );
  AOI21_X1 _0768_ (
    .A(_0170_),
    .B1(_0169_),
    .B2(odat[34]),
    .ZN(_0171_)
  );
  XNOR2_X1 _0769_ (
    .A(odat[35]),
    .B(_0171_),
    .ZN(_0172_)
  );
  MUX2_X1 _0770_ (
    .A(idat[8]),
    .B(_0172_),
    .S(_0056_),
    .Z(_0000_[8])
  );
  NAND2_X1 _0771_ (
    .A1(odat[36]),
    .A2(odat[37]),
    .ZN(_0173_)
  );
  XNOR2_X1 _0772_ (
    .A(odat[36]),
    .B(odat[37]),
    .ZN(_0174_)
  );
  NOR2_X1 _0773_ (
    .A1(odat[38]),
    .A2(_0081_),
    .ZN(_0175_)
  );
  AOI21_X1 _0774_ (
    .A(_0175_),
    .B1(_0174_),
    .B2(odat[38]),
    .ZN(_0176_)
  );
  XNOR2_X1 _0775_ (
    .A(odat[39]),
    .B(_0176_),
    .ZN(_0177_)
  );
  MUX2_X1 _0776_ (
    .A(idat[9]),
    .B(_0177_),
    .S(_0056_),
    .Z(_0000_[9])
  );
  NAND2_X1 _0777_ (
    .A1(odat[40]),
    .A2(odat[41]),
    .ZN(_0178_)
  );
  XNOR2_X1 _0778_ (
    .A(odat[40]),
    .B(odat[41]),
    .ZN(_0179_)
  );
  NOR2_X1 _0779_ (
    .A1(odat[42]),
    .A2(_0082_),
    .ZN(_0180_)
  );
  AOI21_X1 _0780_ (
    .A(_0180_),
    .B1(_0179_),
    .B2(odat[42]),
    .ZN(_0181_)
  );
  XNOR2_X1 _0781_ (
    .A(odat[43]),
    .B(_0181_),
    .ZN(_0182_)
  );
  MUX2_X1 _0782_ (
    .A(idat[10]),
    .B(_0182_),
    .S(_0056_),
    .Z(_0000_[10])
  );
  NOR2_X1 _0783_ (
    .A1(odat[46]),
    .A2(_0084_),
    .ZN(_0183_)
  );
  NAND2_X1 _0784_ (
    .A1(odat[45]),
    .A2(odat[44]),
    .ZN(_0184_)
  );
  XNOR2_X1 _0785_ (
    .A(odat[45]),
    .B(odat[44]),
    .ZN(_0185_)
  );
  AOI21_X1 _0786_ (
    .A(_0183_),
    .B1(_0185_),
    .B2(odat[46]),
    .ZN(_0186_)
  );
  XNOR2_X1 _0787_ (
    .A(odat[47]),
    .B(_0186_),
    .ZN(_0187_)
  );
  MUX2_X1 _0788_ (
    .A(idat[11]),
    .B(_0187_),
    .S(_0056_),
    .Z(_0000_[11])
  );
  NAND2_X1 _0789_ (
    .A1(odat[48]),
    .A2(odat[49]),
    .ZN(_0188_)
  );
  XNOR2_X1 _0790_ (
    .A(odat[48]),
    .B(odat[49]),
    .ZN(_0189_)
  );
  NOR2_X1 _0791_ (
    .A1(odat[50]),
    .A2(_0086_),
    .ZN(_0190_)
  );
  AOI21_X1 _0792_ (
    .A(_0190_),
    .B1(_0189_),
    .B2(odat[50]),
    .ZN(_0191_)
  );
  XNOR2_X1 _0793_ (
    .A(odat[51]),
    .B(_0191_),
    .ZN(_0192_)
  );
  MUX2_X1 _0794_ (
    .A(idat[12]),
    .B(_0192_),
    .S(_0056_),
    .Z(_0000_[12])
  );
  NAND2_X1 _0795_ (
    .A1(odat[52]),
    .A2(odat[53]),
    .ZN(_0193_)
  );
  XNOR2_X1 _0796_ (
    .A(odat[52]),
    .B(odat[53]),
    .ZN(_0194_)
  );
  NOR2_X1 _0797_ (
    .A1(odat[54]),
    .A2(_0088_),
    .ZN(_0195_)
  );
  AOI21_X1 _0798_ (
    .A(_0195_),
    .B1(_0194_),
    .B2(odat[54]),
    .ZN(_0196_)
  );
  XNOR2_X1 _0799_ (
    .A(odat[55]),
    .B(_0196_),
    .ZN(_0197_)
  );
  MUX2_X1 _0800_ (
    .A(idat[13]),
    .B(_0197_),
    .S(_0056_),
    .Z(_0000_[13])
  );
  NAND2_X1 _0801_ (
    .A1(odat[56]),
    .A2(odat[57]),
    .ZN(_0198_)
  );
  XNOR2_X1 _0802_ (
    .A(odat[56]),
    .B(odat[57]),
    .ZN(_0199_)
  );
  NOR2_X1 _0803_ (
    .A1(odat[58]),
    .A2(_0089_),
    .ZN(_0200_)
  );
  AOI21_X1 _0804_ (
    .A(_0200_),
    .B1(_0199_),
    .B2(odat[58]),
    .ZN(_0201_)
  );
  XNOR2_X1 _0805_ (
    .A(odat[59]),
    .B(_0201_),
    .ZN(_0202_)
  );
  MUX2_X1 _0806_ (
    .A(idat[14]),
    .B(_0202_),
    .S(_0056_),
    .Z(_0000_[14])
  );
  NAND2_X1 _0807_ (
    .A1(odat[60]),
    .A2(odat[61]),
    .ZN(_0203_)
  );
  XNOR2_X1 _0808_ (
    .A(odat[60]),
    .B(odat[61]),
    .ZN(_0204_)
  );
  NOR2_X1 _0809_ (
    .A1(odat[62]),
    .A2(_0090_),
    .ZN(_0205_)
  );
  AOI21_X1 _0810_ (
    .A(_0205_),
    .B1(_0204_),
    .B2(odat[62]),
    .ZN(_0206_)
  );
  XNOR2_X1 _0811_ (
    .A(odat[63]),
    .B(_0206_),
    .ZN(_0207_)
  );
  MUX2_X1 _0812_ (
    .A(idat[15]),
    .B(_0207_),
    .S(_0056_),
    .Z(_0000_[15])
  );
  OAI21_X1 _0813_ (
    .A(_0128_),
    .B1(odat[3]),
    .B2(odat[2]),
    .ZN(_0208_)
  );
  MUX2_X1 _0814_ (
    .A(_0093_),
    .B(odat[1]),
    .S(_0094_),
    .Z(_0209_)
  );
  NOR2_X1 _0815_ (
    .A1(_0093_),
    .A2(_0094_),
    .ZN(_0210_)
  );
  NAND2_X1 _0816_ (
    .A1(odat[2]),
    .A2(odat[3]),
    .ZN(_0211_)
  );
  AOI221_X1 _0817_ (
    .A(load),
    .B1(_0208_),
    .B2(_0209_),
    .C1(_0210_),
    .C2(odat[0]),
    .ZN(_0212_)
  );
  AOI21_X1 _0818_ (
    .A(_0212_),
    .B1(_0060_),
    .B2(load),
    .ZN(_0000_[16])
  );
  NAND2_X1 _0819_ (
    .A1(_0091_),
    .A2(odat[5]),
    .ZN(_0213_)
  );
  AOI21_X1 _0820_ (
    .A(_0213_),
    .B1(odat[4]),
    .B2(odat[6]),
    .ZN(_0214_)
  );
  AND2_X1 _0821_ (
    .A1(odat[6]),
    .A2(_0092_),
    .ZN(_0215_)
  );
  AOI211_X1 _0822_ (
    .A(_0091_),
    .B(_0215_),
    .C1(_0134_),
    .C2(odat[5]),
    .ZN(_0216_)
  );
  OAI21_X1 _0823_ (
    .A(_0056_),
    .B1(_0214_),
    .B2(_0216_),
    .ZN(_0217_)
  );
  OAI21_X1 _0824_ (
    .A(_0217_),
    .B1(_0061_),
    .B2(_0056_),
    .ZN(_0000_[17])
  );
  NAND2_X1 _0825_ (
    .A1(odat[10]),
    .A2(_0068_),
    .ZN(_0218_)
  );
  OAI211_X1 _0826_ (
    .A(odat[11]),
    .B(_0218_),
    .C1(_0137_),
    .C2(odat[10]),
    .ZN(_0219_)
  );
  AOI21_X1 _0827_ (
    .A(odat[11]),
    .B1(odat[8]),
    .B2(odat[10]),
    .ZN(_0220_)
  );
  NOR2_X1 _0828_ (
    .A1(_0056_),
    .A2(idat[18]),
    .ZN(_0221_)
  );
  AOI21_X1 _0829_ (
    .A(load),
    .B1(odat[9]),
    .B2(_0220_),
    .ZN(_0222_)
  );
  AOI21_X1 _0830_ (
    .A(_0221_),
    .B1(_0222_),
    .B2(_0219_),
    .ZN(_0000_[18])
  );
  NAND2_X1 _0831_ (
    .A1(odat[14]),
    .A2(_0069_),
    .ZN(_0223_)
  );
  OAI211_X1 _0832_ (
    .A(odat[15]),
    .B(_0223_),
    .C1(_0142_),
    .C2(odat[14]),
    .ZN(_0224_)
  );
  NAND2_X1 _0833_ (
    .A1(odat[14]),
    .A2(odat[12]),
    .ZN(_0225_)
  );
  NAND2_X1 _0834_ (
    .A1(odat[13]),
    .A2(_0225_),
    .ZN(_0226_)
  );
  OAI21_X1 _0835_ (
    .A(_0224_),
    .B1(_0226_),
    .B2(odat[15]),
    .ZN(_0227_)
  );
  MUX2_X1 _0836_ (
    .A(idat[19]),
    .B(_0227_),
    .S(_0056_),
    .Z(_0000_[19])
  );
  NAND2_X1 _0837_ (
    .A1(odat[18]),
    .A2(odat[16]),
    .ZN(_0228_)
  );
  NOR2_X1 _0838_ (
    .A1(odat[19]),
    .A2(_0071_),
    .ZN(_0229_)
  );
  OAI21_X1 _0839_ (
    .A(_0228_),
    .B1(_0149_),
    .B2(odat[18]),
    .ZN(_0230_)
  );
  NAND2_X1 _0840_ (
    .A1(_0070_),
    .A2(odat[19]),
    .ZN(_0231_)
  );
  AOI221_X1 _0841_ (
    .A(load),
    .B1(_0228_),
    .B2(_0229_),
    .C1(_0230_),
    .C2(odat[19]),
    .ZN(_0232_)
  );
  AOI21_X1 _0842_ (
    .A(_0232_),
    .B1(_0062_),
    .B2(load),
    .ZN(_0000_[20])
  );
  AND2_X1 _0843_ (
    .A1(odat[22]),
    .A2(odat[20]),
    .ZN(_0233_)
  );
  NAND2_X1 _0844_ (
    .A1(_0073_),
    .A2(odat[21]),
    .ZN(_0234_)
  );
  NAND2_X1 _0845_ (
    .A1(odat[22]),
    .A2(_0074_),
    .ZN(_0235_)
  );
  AOI21_X1 _0846_ (
    .A(odat[22]),
    .B1(odat[20]),
    .B2(odat[21]),
    .ZN(_0236_)
  );
  OAI21_X1 _0847_ (
    .A(odat[23]),
    .B1(_0233_),
    .B2(_0236_),
    .ZN(_0237_)
  );
  OAI21_X1 _0848_ (
    .A(_0237_),
    .B1(_0234_),
    .B2(_0233_),
    .ZN(_0238_)
  );
  MUX2_X1 _0849_ (
    .A(idat[21]),
    .B(_0238_),
    .S(_0056_),
    .Z(_0000_[21])
  );
  NAND2_X1 _0850_ (
    .A1(odat[26]),
    .A2(_0075_),
    .ZN(_0239_)
  );
  OAI211_X1 _0851_ (
    .A(odat[27]),
    .B(_0239_),
    .C1(_0158_),
    .C2(odat[26]),
    .ZN(_0240_)
  );
  NAND2_X1 _0852_ (
    .A1(odat[26]),
    .A2(odat[24]),
    .ZN(_0241_)
  );
  NAND2_X1 _0853_ (
    .A1(odat[25]),
    .A2(_0241_),
    .ZN(_0242_)
  );
  OAI21_X1 _0854_ (
    .A(_0240_),
    .B1(_0242_),
    .B2(odat[27]),
    .ZN(_0243_)
  );
  MUX2_X1 _0855_ (
    .A(idat[22]),
    .B(_0243_),
    .S(_0056_),
    .Z(_0000_[22])
  );
  NAND2_X1 _0856_ (
    .A1(odat[30]),
    .A2(_0076_),
    .ZN(_0244_)
  );
  OAI211_X1 _0857_ (
    .A(odat[31]),
    .B(_0244_),
    .C1(_0163_),
    .C2(odat[30]),
    .ZN(_0245_)
  );
  AOI211_X1 _0858_ (
    .A(odat[31]),
    .B(_0077_),
    .C1(odat[28]),
    .C2(odat[30]),
    .ZN(_0246_)
  );
  NOR2_X1 _0859_ (
    .A1(_0056_),
    .A2(idat[23]),
    .ZN(_0247_)
  );
  NOR2_X1 _0860_ (
    .A1(load),
    .A2(_0246_),
    .ZN(_0248_)
  );
  AOI21_X1 _0861_ (
    .A(_0247_),
    .B1(_0248_),
    .B2(_0245_),
    .ZN(_0000_[23])
  );
  NAND2_X1 _0862_ (
    .A1(_0078_),
    .A2(odat[33]),
    .ZN(_0249_)
  );
  AOI21_X1 _0863_ (
    .A(_0249_),
    .B1(odat[32]),
    .B2(odat[34]),
    .ZN(_0250_)
  );
  AND2_X1 _0864_ (
    .A1(odat[34]),
    .A2(_0079_),
    .ZN(_0251_)
  );
  AOI211_X1 _0865_ (
    .A(_0078_),
    .B(_0251_),
    .C1(_0170_),
    .C2(odat[33]),
    .ZN(_0252_)
  );
  OAI21_X1 _0866_ (
    .A(_0056_),
    .B1(_0250_),
    .B2(_0252_),
    .ZN(_0253_)
  );
  OAI21_X1 _0867_ (
    .A(_0253_),
    .B1(_0063_),
    .B2(_0056_),
    .ZN(_0000_[24])
  );
  NAND2_X1 _0868_ (
    .A1(_0080_),
    .A2(odat[37]),
    .ZN(_0254_)
  );
  AOI21_X1 _0869_ (
    .A(_0254_),
    .B1(odat[36]),
    .B2(odat[38]),
    .ZN(_0255_)
  );
  AND2_X1 _0870_ (
    .A1(odat[38]),
    .A2(_0081_),
    .ZN(_0256_)
  );
  AOI211_X1 _0871_ (
    .A(_0080_),
    .B(_0256_),
    .C1(_0175_),
    .C2(odat[37]),
    .ZN(_0257_)
  );
  OAI21_X1 _0872_ (
    .A(_0056_),
    .B1(_0255_),
    .B2(_0257_),
    .ZN(_0258_)
  );
  OAI21_X1 _0873_ (
    .A(_0258_),
    .B1(_0064_),
    .B2(_0056_),
    .ZN(_0000_[25])
  );
  NAND2_X1 _0874_ (
    .A1(odat[42]),
    .A2(_0082_),
    .ZN(_0259_)
  );
  OAI211_X1 _0875_ (
    .A(odat[43]),
    .B(_0259_),
    .C1(_0178_),
    .C2(odat[42]),
    .ZN(_0260_)
  );
  NAND2_X1 _0876_ (
    .A1(odat[42]),
    .A2(odat[40]),
    .ZN(_0261_)
  );
  NAND2_X1 _0877_ (
    .A1(odat[41]),
    .A2(_0261_),
    .ZN(_0262_)
  );
  OAI21_X1 _0878_ (
    .A(_0260_),
    .B1(_0262_),
    .B2(odat[43]),
    .ZN(_0263_)
  );
  MUX2_X1 _0879_ (
    .A(idat[26]),
    .B(_0263_),
    .S(_0056_),
    .Z(_0000_[26])
  );
  NAND2_X1 _0880_ (
    .A1(odat[46]),
    .A2(_0084_),
    .ZN(_0264_)
  );
  OAI211_X1 _0881_ (
    .A(odat[47]),
    .B(_0264_),
    .C1(_0184_),
    .C2(odat[46]),
    .ZN(_0265_)
  );
  OAI21_X1 _0882_ (
    .A(odat[45]),
    .B1(_0084_),
    .B2(_0083_),
    .ZN(_0266_)
  );
  OAI21_X1 _0883_ (
    .A(_0265_),
    .B1(_0266_),
    .B2(odat[47]),
    .ZN(_0267_)
  );
  MUX2_X1 _0884_ (
    .A(idat[27]),
    .B(_0267_),
    .S(_0056_),
    .Z(_0000_[27])
  );
  NAND2_X1 _0885_ (
    .A1(_0085_),
    .A2(odat[49]),
    .ZN(_0268_)
  );
  AOI21_X1 _0886_ (
    .A(_0268_),
    .B1(odat[48]),
    .B2(odat[50]),
    .ZN(_0269_)
  );
  AND2_X1 _0887_ (
    .A1(odat[50]),
    .A2(_0086_),
    .ZN(_0270_)
  );
  AOI211_X1 _0888_ (
    .A(_0085_),
    .B(_0270_),
    .C1(_0190_),
    .C2(odat[49]),
    .ZN(_0271_)
  );
  OAI21_X1 _0889_ (
    .A(_0056_),
    .B1(_0269_),
    .B2(_0271_),
    .ZN(_0272_)
  );
  OAI21_X1 _0890_ (
    .A(_0272_),
    .B1(_0065_),
    .B2(_0056_),
    .ZN(_0000_[28])
  );
  NAND2_X1 _0891_ (
    .A1(_0087_),
    .A2(odat[53]),
    .ZN(_0273_)
  );
  AOI21_X1 _0892_ (
    .A(_0273_),
    .B1(odat[52]),
    .B2(odat[54]),
    .ZN(_0274_)
  );
  AND2_X1 _0893_ (
    .A1(odat[54]),
    .A2(_0088_),
    .ZN(_0275_)
  );
  AOI211_X1 _0894_ (
    .A(_0087_),
    .B(_0275_),
    .C1(_0195_),
    .C2(odat[53]),
    .ZN(_0276_)
  );
  OAI21_X1 _0895_ (
    .A(_0056_),
    .B1(_0274_),
    .B2(_0276_),
    .ZN(_0277_)
  );
  OAI21_X1 _0896_ (
    .A(_0277_),
    .B1(_0066_),
    .B2(_0056_),
    .ZN(_0000_[29])
  );
  NAND2_X1 _0897_ (
    .A1(odat[58]),
    .A2(_0089_),
    .ZN(_0278_)
  );
  OAI211_X1 _0898_ (
    .A(odat[59]),
    .B(_0278_),
    .C1(_0198_),
    .C2(odat[58]),
    .ZN(_0279_)
  );
  NAND2_X1 _0899_ (
    .A1(odat[58]),
    .A2(odat[56]),
    .ZN(_0280_)
  );
  NAND2_X1 _0900_ (
    .A1(odat[57]),
    .A2(_0280_),
    .ZN(_0281_)
  );
  OAI21_X1 _0901_ (
    .A(_0279_),
    .B1(_0281_),
    .B2(odat[59]),
    .ZN(_0282_)
  );
  MUX2_X1 _0902_ (
    .A(idat[30]),
    .B(_0282_),
    .S(_0056_),
    .Z(_0000_[30])
  );
  NAND2_X1 _0903_ (
    .A1(odat[62]),
    .A2(_0090_),
    .ZN(_0283_)
  );
  OAI211_X1 _0904_ (
    .A(odat[63]),
    .B(_0283_),
    .C1(_0203_),
    .C2(odat[62]),
    .ZN(_0284_)
  );
  NAND2_X1 _0905_ (
    .A1(odat[62]),
    .A2(odat[60]),
    .ZN(_0285_)
  );
  NAND2_X1 _0906_ (
    .A1(odat[61]),
    .A2(_0285_),
    .ZN(_0286_)
  );
  OAI21_X1 _0907_ (
    .A(_0284_),
    .B1(_0286_),
    .B2(odat[63]),
    .ZN(_0287_)
  );
  MUX2_X1 _0908_ (
    .A(idat[31]),
    .B(_0287_),
    .S(_0056_),
    .Z(_0000_[31])
  );
  AOI211_X1 _0909_ (
    .A(_0094_),
    .B(odat[1]),
    .C1(odat[0]),
    .C2(_0093_),
    .ZN(_0288_)
  );
  AOI21_X1 _0910_ (
    .A(_0288_),
    .B1(_0211_),
    .B2(_0128_),
    .ZN(_0289_)
  );
  XNOR2_X1 _0911_ (
    .A(_0093_),
    .B(_0289_),
    .ZN(_0290_)
  );
  MUX2_X1 _0912_ (
    .A(idat[32]),
    .B(_0290_),
    .S(_0056_),
    .Z(_0000_[32])
  );
  OAI21_X1 _0913_ (
    .A(odat[7]),
    .B1(_0092_),
    .B2(odat[6]),
    .ZN(_0291_)
  );
  MUX2_X1 _0914_ (
    .A(odat[5]),
    .B(_0132_),
    .S(_0291_),
    .Z(_0292_)
  );
  XOR2_X1 _0915_ (
    .A(odat[6]),
    .B(_0292_),
    .Z(_0293_)
  );
  MUX2_X1 _0916_ (
    .A(idat[33]),
    .B(_0293_),
    .S(_0056_),
    .Z(_0000_[33])
  );
  NOR2_X1 _0917_ (
    .A1(_0056_),
    .A2(idat[34]),
    .ZN(_0294_)
  );
  NOR2_X1 _0918_ (
    .A1(odat[8]),
    .A2(odat[9]),
    .ZN(_0295_)
  );
  NOR2_X1 _0919_ (
    .A1(odat[10]),
    .A2(odat[11]),
    .ZN(_0296_)
  );
  AOI21_X1 _0920_ (
    .A(load),
    .B1(_0295_),
    .B2(_0296_),
    .ZN(_0297_)
  );
  MUX2_X1 _0921_ (
    .A(odat[8]),
    .B(odat[11]),
    .S(odat[10]),
    .Z(_0298_)
  );
  NAND2_X1 _0922_ (
    .A1(odat[9]),
    .A2(_0218_),
    .ZN(_0299_)
  );
  MUX2_X1 _0923_ (
    .A(_0299_),
    .B(odat[9]),
    .S(_0298_),
    .Z(_0300_)
  );
  AOI21_X1 _0924_ (
    .A(_0294_),
    .B1(_0297_),
    .B2(_0300_),
    .ZN(_0000_[34])
  );
  OAI21_X1 _0925_ (
    .A(odat[15]),
    .B1(_0069_),
    .B2(odat[14]),
    .ZN(_0301_)
  );
  MUX2_X1 _0926_ (
    .A(odat[13]),
    .B(_0142_),
    .S(_0301_),
    .Z(_0302_)
  );
  XOR2_X1 _0927_ (
    .A(odat[14]),
    .B(_0302_),
    .Z(_0303_)
  );
  MUX2_X1 _0928_ (
    .A(idat[35]),
    .B(_0303_),
    .S(_0056_),
    .Z(_0000_[35])
  );
  NAND2_X1 _0929_ (
    .A1(_0070_),
    .A2(_0150_),
    .ZN(_0304_)
  );
  NAND3_X1 _0930_ (
    .A1(odat[18]),
    .A2(odat[16]),
    .A3(_0229_),
    .ZN(_0305_)
  );
  OAI211_X1 _0931_ (
    .A(_0071_),
    .B(_0231_),
    .C1(_0147_),
    .C2(odat[19]),
    .ZN(_0306_)
  );
  NAND3_X1 _0932_ (
    .A1(_0304_),
    .A2(_0305_),
    .A3(_0306_),
    .ZN(_0307_)
  );
  MUX2_X1 _0933_ (
    .A(idat[36]),
    .B(_0307_),
    .S(_0056_),
    .Z(_0000_[36])
  );
  NOR3_X1 _0934_ (
    .A1(_0072_),
    .A2(_0074_),
    .A3(_0234_),
    .ZN(_0308_)
  );
  OAI21_X1 _0935_ (
    .A(_0073_),
    .B1(odat[20]),
    .B2(odat[22]),
    .ZN(_0309_)
  );
  AOI21_X1 _0936_ (
    .A(odat[21]),
    .B1(odat[23]),
    .B2(_0072_),
    .ZN(_0310_)
  );
  AOI221_X1 _0937_ (
    .A(_0308_),
    .B1(_0309_),
    .B2(_0310_),
    .C1(_0155_),
    .C2(_0072_),
    .ZN(_0311_)
  );
  NAND2_X1 _0938_ (
    .A1(load),
    .A2(idat[37]),
    .ZN(_0312_)
  );
  OAI21_X1 _0939_ (
    .A(_0312_),
    .B1(_0311_),
    .B2(load),
    .ZN(_0000_[37])
  );
  OAI21_X1 _0940_ (
    .A(odat[27]),
    .B1(_0075_),
    .B2(odat[26]),
    .ZN(_0313_)
  );
  MUX2_X1 _0941_ (
    .A(odat[25]),
    .B(_0158_),
    .S(_0313_),
    .Z(_0314_)
  );
  XOR2_X1 _0942_ (
    .A(odat[26]),
    .B(_0314_),
    .Z(_0315_)
  );
  MUX2_X1 _0943_ (
    .A(idat[38]),
    .B(_0315_),
    .S(_0056_),
    .Z(_0000_[38])
  );
  NOR2_X1 _0944_ (
    .A1(_0056_),
    .A2(idat[39]),
    .ZN(_0316_)
  );
  MUX2_X1 _0945_ (
    .A(odat[28]),
    .B(odat[31]),
    .S(odat[30]),
    .Z(_0317_)
  );
  NOR2_X1 _0946_ (
    .A1(_0077_),
    .A2(_0317_),
    .ZN(_0318_)
  );
  NAND2_X1 _0947_ (
    .A1(_0077_),
    .A2(_0317_),
    .ZN(_0319_)
  );
  NOR4_X1 _0948_ (
    .A1(odat[30]),
    .A2(odat[31]),
    .A3(odat[28]),
    .A4(odat[29]),
    .ZN(_0320_)
  );
  AOI211_X1 _0949_ (
    .A(load),
    .B(_0320_),
    .C1(_0318_),
    .C2(_0244_),
    .ZN(_0321_)
  );
  AOI21_X1 _0950_ (
    .A(_0316_),
    .B1(_0319_),
    .B2(_0321_),
    .ZN(_0000_[39])
  );
  OAI21_X1 _0951_ (
    .A(odat[35]),
    .B1(_0079_),
    .B2(odat[34]),
    .ZN(_0322_)
  );
  MUX2_X1 _0952_ (
    .A(odat[33]),
    .B(_0168_),
    .S(_0322_),
    .Z(_0323_)
  );
  XOR2_X1 _0953_ (
    .A(odat[34]),
    .B(_0323_),
    .Z(_0324_)
  );
  MUX2_X1 _0954_ (
    .A(idat[40]),
    .B(_0324_),
    .S(_0056_),
    .Z(_0000_[40])
  );
  OAI21_X1 _0955_ (
    .A(odat[39]),
    .B1(_0081_),
    .B2(odat[38]),
    .ZN(_0325_)
  );
  MUX2_X1 _0956_ (
    .A(odat[37]),
    .B(_0173_),
    .S(_0325_),
    .Z(_0326_)
  );
  XOR2_X1 _0957_ (
    .A(odat[38]),
    .B(_0326_),
    .Z(_0327_)
  );
  MUX2_X1 _0958_ (
    .A(idat[41]),
    .B(_0327_),
    .S(_0056_),
    .Z(_0000_[41])
  );
  OAI21_X1 _0959_ (
    .A(odat[43]),
    .B1(_0082_),
    .B2(odat[42]),
    .ZN(_0328_)
  );
  MUX2_X1 _0960_ (
    .A(odat[41]),
    .B(_0178_),
    .S(_0328_),
    .Z(_0329_)
  );
  XOR2_X1 _0961_ (
    .A(odat[42]),
    .B(_0329_),
    .Z(_0330_)
  );
  MUX2_X1 _0962_ (
    .A(idat[42]),
    .B(_0330_),
    .S(_0056_),
    .Z(_0000_[42])
  );
  OAI21_X1 _0963_ (
    .A(odat[47]),
    .B1(_0084_),
    .B2(odat[46]),
    .ZN(_0331_)
  );
  MUX2_X1 _0964_ (
    .A(odat[45]),
    .B(_0184_),
    .S(_0331_),
    .Z(_0332_)
  );
  XNOR2_X1 _0965_ (
    .A(_0083_),
    .B(_0332_),
    .ZN(_0333_)
  );
  MUX2_X1 _0966_ (
    .A(idat[43]),
    .B(_0333_),
    .S(_0056_),
    .Z(_0000_[43])
  );
  OAI21_X1 _0967_ (
    .A(odat[51]),
    .B1(_0086_),
    .B2(odat[50]),
    .ZN(_0334_)
  );
  MUX2_X1 _0968_ (
    .A(odat[49]),
    .B(_0188_),
    .S(_0334_),
    .Z(_0335_)
  );
  XOR2_X1 _0969_ (
    .A(odat[50]),
    .B(_0335_),
    .Z(_0336_)
  );
  MUX2_X1 _0970_ (
    .A(idat[44]),
    .B(_0336_),
    .S(_0056_),
    .Z(_0000_[44])
  );
  OAI21_X1 _0971_ (
    .A(odat[55]),
    .B1(_0088_),
    .B2(odat[54]),
    .ZN(_0337_)
  );
  MUX2_X1 _0972_ (
    .A(odat[53]),
    .B(_0193_),
    .S(_0337_),
    .Z(_0338_)
  );
  XOR2_X1 _0973_ (
    .A(odat[54]),
    .B(_0338_),
    .Z(_0339_)
  );
  MUX2_X1 _0974_ (
    .A(idat[45]),
    .B(_0339_),
    .S(_0056_),
    .Z(_0000_[45])
  );
  OAI21_X1 _0975_ (
    .A(odat[59]),
    .B1(_0089_),
    .B2(odat[58]),
    .ZN(_0340_)
  );
  MUX2_X1 _0976_ (
    .A(odat[57]),
    .B(_0198_),
    .S(_0340_),
    .Z(_0341_)
  );
  XOR2_X1 _0977_ (
    .A(odat[58]),
    .B(_0341_),
    .Z(_0342_)
  );
  MUX2_X1 _0978_ (
    .A(idat[46]),
    .B(_0342_),
    .S(_0056_),
    .Z(_0000_[46])
  );
  OAI21_X1 _0979_ (
    .A(odat[63]),
    .B1(_0090_),
    .B2(odat[62]),
    .ZN(_0343_)
  );
  MUX2_X1 _0980_ (
    .A(odat[61]),
    .B(_0203_),
    .S(_0343_),
    .Z(_0344_)
  );
  XOR2_X1 _0981_ (
    .A(odat[62]),
    .B(_0344_),
    .Z(_0345_)
  );
  MUX2_X1 _0982_ (
    .A(idat[47]),
    .B(_0345_),
    .S(_0056_),
    .Z(_0000_[47])
  );
  MUX2_X1 _0983_ (
    .A(odat[0]),
    .B(_0127_),
    .S(odat[1]),
    .Z(_0005_)
  );
  OAI211_X1 _0984_ (
    .A(_0093_),
    .B(odat[3]),
    .C1(odat[0]),
    .C2(odat[1]),
    .ZN(_0006_)
  );
  OAI21_X1 _0985_ (
    .A(_0006_),
    .B1(_0005_),
    .B2(odat[3]),
    .ZN(_0007_)
  );
  MUX2_X1 _0986_ (
    .A(idat[48]),
    .B(_0007_),
    .S(_0056_),
    .Z(_0000_[48])
  );
  OAI21_X1 _0987_ (
    .A(_0091_),
    .B1(_0133_),
    .B2(_0215_),
    .ZN(_0008_)
  );
  OAI21_X1 _0988_ (
    .A(odat[7]),
    .B1(odat[4]),
    .B2(odat[5]),
    .ZN(_0009_)
  );
  OAI21_X1 _0989_ (
    .A(_0008_),
    .B1(_0009_),
    .B2(odat[6]),
    .ZN(_0010_)
  );
  MUX2_X1 _0990_ (
    .A(idat[49]),
    .B(_0010_),
    .S(_0056_),
    .Z(_0000_[49])
  );
  NOR2_X1 _0991_ (
    .A1(_0056_),
    .A2(idat[50]),
    .ZN(_0011_)
  );
  NAND2_X1 _0992_ (
    .A1(_0137_),
    .A2(_0218_),
    .ZN(_0012_)
  );
  OAI21_X1 _0993_ (
    .A(odat[11]),
    .B1(_0295_),
    .B2(odat[10]),
    .ZN(_0013_)
  );
  OAI21_X1 _0994_ (
    .A(_0013_),
    .B1(_0012_),
    .B2(odat[11]),
    .ZN(_0014_)
  );
  AOI21_X1 _0995_ (
    .A(_0011_),
    .B1(_0014_),
    .B2(_0297_),
    .ZN(_0000_[50])
  );
  AOI21_X1 _0996_ (
    .A(_0143_),
    .B1(_0069_),
    .B2(odat[14]),
    .ZN(_0015_)
  );
  OAI21_X1 _0997_ (
    .A(odat[15]),
    .B1(odat[12]),
    .B2(odat[13]),
    .ZN(_0016_)
  );
  OAI22_X1 _0998_ (
    .A1(odat[15]),
    .A2(_0015_),
    .B1(_0016_),
    .B2(odat[14]),
    .ZN(_0017_)
  );
  MUX2_X1 _0999_ (
    .A(idat[51]),
    .B(_0017_),
    .S(_0056_),
    .Z(_0000_[51])
  );
  MUX2_X1 _1000_ (
    .A(odat[16]),
    .B(_0147_),
    .S(odat[17]),
    .Z(_0018_)
  );
  OAI22_X1 _1001_ (
    .A1(_0148_),
    .A2(_0231_),
    .B1(_0018_),
    .B2(odat[19]),
    .ZN(_0019_)
  );
  MUX2_X1 _1002_ (
    .A(idat[52]),
    .B(_0019_),
    .S(_0056_),
    .Z(_0000_[52])
  );
  AOI21_X1 _1003_ (
    .A(odat[23]),
    .B1(_0155_),
    .B2(_0235_),
    .ZN(_0020_)
  );
  NOR3_X1 _1004_ (
    .A1(odat[22]),
    .A2(_0073_),
    .A3(_0154_),
    .ZN(_0021_)
  );
  OAI21_X1 _1005_ (
    .A(_0056_),
    .B1(_0020_),
    .B2(_0021_),
    .ZN(_0022_)
  );
  OAI21_X1 _1006_ (
    .A(_0022_),
    .B1(_0067_),
    .B2(_0056_),
    .ZN(_0000_[53])
  );
  AOI21_X1 _1007_ (
    .A(_0159_),
    .B1(_0075_),
    .B2(odat[26]),
    .ZN(_0023_)
  );
  OAI21_X1 _1008_ (
    .A(odat[27]),
    .B1(odat[24]),
    .B2(odat[25]),
    .ZN(_0024_)
  );
  OAI22_X1 _1009_ (
    .A1(odat[27]),
    .A2(_0023_),
    .B1(_0024_),
    .B2(odat[26]),
    .ZN(_0025_)
  );
  MUX2_X1 _1010_ (
    .A(idat[54]),
    .B(_0025_),
    .S(_0056_),
    .Z(_0000_[54])
  );
  AOI21_X1 _1011_ (
    .A(_0164_),
    .B1(_0076_),
    .B2(odat[30]),
    .ZN(_0026_)
  );
  OAI21_X1 _1012_ (
    .A(odat[31]),
    .B1(odat[28]),
    .B2(odat[29]),
    .ZN(_0027_)
  );
  OAI22_X1 _1013_ (
    .A1(odat[31]),
    .A2(_0026_),
    .B1(_0027_),
    .B2(odat[30]),
    .ZN(_0028_)
  );
  MUX2_X1 _1014_ (
    .A(idat[55]),
    .B(_0028_),
    .S(_0056_),
    .Z(_0000_[55])
  );
  OAI21_X1 _1015_ (
    .A(_0078_),
    .B1(_0169_),
    .B2(_0251_),
    .ZN(_0029_)
  );
  OAI21_X1 _1016_ (
    .A(odat[35]),
    .B1(odat[32]),
    .B2(odat[33]),
    .ZN(_0030_)
  );
  OAI21_X1 _1017_ (
    .A(_0029_),
    .B1(_0030_),
    .B2(odat[34]),
    .ZN(_0031_)
  );
  MUX2_X1 _1018_ (
    .A(idat[56]),
    .B(_0031_),
    .S(_0056_),
    .Z(_0000_[56])
  );
  OAI21_X1 _1019_ (
    .A(_0080_),
    .B1(_0174_),
    .B2(_0256_),
    .ZN(_0032_)
  );
  OAI21_X1 _1020_ (
    .A(odat[39]),
    .B1(odat[36]),
    .B2(odat[37]),
    .ZN(_0033_)
  );
  OAI21_X1 _1021_ (
    .A(_0032_),
    .B1(_0033_),
    .B2(odat[38]),
    .ZN(_0034_)
  );
  MUX2_X1 _1022_ (
    .A(idat[57]),
    .B(_0034_),
    .S(_0056_),
    .Z(_0000_[57])
  );
  AOI21_X1 _1023_ (
    .A(_0179_),
    .B1(_0082_),
    .B2(odat[42]),
    .ZN(_0035_)
  );
  OAI21_X1 _1024_ (
    .A(odat[43]),
    .B1(odat[40]),
    .B2(odat[41]),
    .ZN(_0036_)
  );
  OAI22_X1 _1025_ (
    .A1(odat[43]),
    .A2(_0035_),
    .B1(_0036_),
    .B2(odat[42]),
    .ZN(_0037_)
  );
  MUX2_X1 _1026_ (
    .A(idat[58]),
    .B(_0037_),
    .S(_0056_),
    .Z(_0000_[58])
  );
  OAI21_X1 _1027_ (
    .A(_0083_),
    .B1(odat[45]),
    .B2(odat[44]),
    .ZN(_0038_)
  );
  NOR2_X1 _1028_ (
    .A1(odat[47]),
    .A2(_0185_),
    .ZN(_0039_)
  );
  AOI22_X1 _1029_ (
    .A1(odat[47]),
    .A2(_0038_),
    .B1(_0039_),
    .B2(_0264_),
    .ZN(_0040_)
  );
  MUX2_X1 _1030_ (
    .A(idat[59]),
    .B(_0040_),
    .S(_0056_),
    .Z(_0000_[59])
  );
  OAI21_X1 _1031_ (
    .A(_0085_),
    .B1(_0189_),
    .B2(_0270_),
    .ZN(_0041_)
  );
  OAI21_X1 _1032_ (
    .A(odat[51]),
    .B1(odat[48]),
    .B2(odat[49]),
    .ZN(_0042_)
  );
  OAI21_X1 _1033_ (
    .A(_0041_),
    .B1(_0042_),
    .B2(odat[50]),
    .ZN(_0043_)
  );
  MUX2_X1 _1034_ (
    .A(idat[60]),
    .B(_0043_),
    .S(_0056_),
    .Z(_0000_[60])
  );
  OAI21_X1 _1035_ (
    .A(_0087_),
    .B1(_0194_),
    .B2(_0275_),
    .ZN(_0044_)
  );
  OAI21_X1 _1036_ (
    .A(odat[55]),
    .B1(odat[52]),
    .B2(odat[53]),
    .ZN(_0045_)
  );
  OAI21_X1 _1037_ (
    .A(_0044_),
    .B1(_0045_),
    .B2(odat[54]),
    .ZN(_0046_)
  );
  MUX2_X1 _1038_ (
    .A(idat[61]),
    .B(_0046_),
    .S(_0056_),
    .Z(_0000_[61])
  );
  AOI21_X1 _1039_ (
    .A(_0199_),
    .B1(_0089_),
    .B2(odat[58]),
    .ZN(_0047_)
  );
  OAI21_X1 _1040_ (
    .A(odat[59]),
    .B1(odat[56]),
    .B2(odat[57]),
    .ZN(_0048_)
  );
  OAI22_X1 _1041_ (
    .A1(odat[59]),
    .A2(_0047_),
    .B1(_0048_),
    .B2(odat[58]),
    .ZN(_0049_)
  );
  MUX2_X1 _1042_ (
    .A(idat[62]),
    .B(_0049_),
    .S(_0056_),
    .Z(_0000_[62])
  );
  AOI21_X1 _1043_ (
    .A(_0204_),
    .B1(_0090_),
    .B2(odat[62]),
    .ZN(_0050_)
  );
  OAI21_X1 _1044_ (
    .A(odat[63]),
    .B1(odat[60]),
    .B2(odat[61]),
    .ZN(_0051_)
  );
  OAI22_X1 _1045_ (
    .A1(odat[63]),
    .A2(_0050_),
    .B1(_0051_),
    .B2(odat[62]),
    .ZN(_0052_)
  );
  MUX2_X1 _1046_ (
    .A(idat[63]),
    .B(_0052_),
    .S(_0056_),
    .Z(_0000_[63])
  );
  (* src = "present_encrypt.v:94" *)
  DFF_X1 _1047_ (
    .CK(clk),
    .D(_0002_[0]),
    .Q(round[0]),
    .QN(_0346_)
  );
  (* src = "present_encrypt.v:94" *)
  DFF_X1 _1048_ (
    .CK(clk),
    .D(_0002_[1]),
    .Q(round[1]),
    .QN(_0347_)
  );
  (* src = "present_encrypt.v:94" *)
  DFF_X1 _1049_ (
    .CK(clk),
    .D(_0002_[2]),
    .Q(round[2]),
    .QN(_0348_)
  );
  (* src = "present_encrypt.v:94" *)
  DFF_X1 _1050_ (
    .CK(clk),
    .D(_0002_[3]),
    .Q(round[3]),
    .QN(_0349_)
  );
  (* src = "present_encrypt.v:94" *)
  DFF_X1 _1051_ (
    .CK(clk),
    .D(_0002_[4]),
    .Q(round[4]),
    .QN(_0350_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1052_ (
    .CK(clk),
    .D(_0001_[0]),
    .Q(kreg[0]),
    .QN(_0351_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1053_ (
    .CK(clk),
    .D(_0001_[1]),
    .Q(kreg[1]),
    .QN(_0352_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1054_ (
    .CK(clk),
    .D(_0001_[2]),
    .Q(kreg[2]),
    .QN(_0353_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1055_ (
    .CK(clk),
    .D(_0001_[3]),
    .Q(kreg[3]),
    .QN(_0354_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1056_ (
    .CK(clk),
    .D(_0001_[4]),
    .Q(kreg[4]),
    .QN(_0355_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1057_ (
    .CK(clk),
    .D(_0001_[5]),
    .Q(kreg[5]),
    .QN(_0356_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1058_ (
    .CK(clk),
    .D(_0001_[6]),
    .Q(kreg[6]),
    .QN(_0357_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1059_ (
    .CK(clk),
    .D(_0001_[7]),
    .Q(kreg[7]),
    .QN(_0358_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1060_ (
    .CK(clk),
    .D(_0001_[8]),
    .Q(kreg[8]),
    .QN(_0359_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1061_ (
    .CK(clk),
    .D(_0001_[9]),
    .Q(kreg[9]),
    .QN(_0360_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1062_ (
    .CK(clk),
    .D(_0001_[10]),
    .Q(kreg[10]),
    .QN(_0361_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1063_ (
    .CK(clk),
    .D(_0001_[11]),
    .Q(kreg[11]),
    .QN(_0362_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1064_ (
    .CK(clk),
    .D(_0001_[12]),
    .Q(kreg[12]),
    .QN(_0363_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1065_ (
    .CK(clk),
    .D(_0001_[13]),
    .Q(kreg[13]),
    .QN(_0364_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1066_ (
    .CK(clk),
    .D(_0001_[14]),
    .Q(kreg[14]),
    .QN(_0365_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1067_ (
    .CK(clk),
    .D(_0001_[15]),
    .Q(kreg[15]),
    .QN(_0003_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1068_ (
    .CK(clk),
    .D(_0001_[16]),
    .Q(kreg[16]),
    .QN(_0004_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1069_ (
    .CK(clk),
    .D(_0001_[17]),
    .Q(kreg[17]),
    .QN(_0366_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1070_ (
    .CK(clk),
    .D(_0001_[18]),
    .Q(kreg[18]),
    .QN(_0367_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1071_ (
    .CK(clk),
    .D(_0001_[19]),
    .Q(kreg[19]),
    .QN(_0368_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1072_ (
    .CK(clk),
    .D(_0001_[20]),
    .Q(kreg[20]),
    .QN(_0369_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1073_ (
    .CK(clk),
    .D(_0001_[21]),
    .Q(kreg[21]),
    .QN(_0370_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1074_ (
    .CK(clk),
    .D(_0001_[22]),
    .Q(kreg[22]),
    .QN(_0371_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1075_ (
    .CK(clk),
    .D(_0001_[23]),
    .Q(kreg[23]),
    .QN(_0372_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1076_ (
    .CK(clk),
    .D(_0001_[24]),
    .Q(kreg[24]),
    .QN(_0373_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1077_ (
    .CK(clk),
    .D(_0001_[25]),
    .Q(kreg[25]),
    .QN(_0374_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1078_ (
    .CK(clk),
    .D(_0001_[26]),
    .Q(kreg[26]),
    .QN(_0375_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1079_ (
    .CK(clk),
    .D(_0001_[27]),
    .Q(kreg[27]),
    .QN(_0376_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1080_ (
    .CK(clk),
    .D(_0001_[28]),
    .Q(kreg[28]),
    .QN(_0377_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1081_ (
    .CK(clk),
    .D(_0001_[29]),
    .Q(kreg[29]),
    .QN(_0378_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1082_ (
    .CK(clk),
    .D(_0001_[30]),
    .Q(kreg[30]),
    .QN(_0379_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1083_ (
    .CK(clk),
    .D(_0001_[31]),
    .Q(kreg[31]),
    .QN(_0380_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1084_ (
    .CK(clk),
    .D(_0001_[32]),
    .Q(kreg[32]),
    .QN(_0381_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1085_ (
    .CK(clk),
    .D(_0001_[33]),
    .Q(kreg[33]),
    .QN(_0382_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1086_ (
    .CK(clk),
    .D(_0001_[34]),
    .Q(kreg[34]),
    .QN(_0383_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1087_ (
    .CK(clk),
    .D(_0001_[35]),
    .Q(kreg[35]),
    .QN(_0384_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1088_ (
    .CK(clk),
    .D(_0001_[36]),
    .Q(kreg[36]),
    .QN(_0385_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1089_ (
    .CK(clk),
    .D(_0001_[37]),
    .Q(kreg[37]),
    .QN(_0386_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1090_ (
    .CK(clk),
    .D(_0001_[38]),
    .Q(kreg[38]),
    .QN(_0387_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1091_ (
    .CK(clk),
    .D(_0001_[39]),
    .Q(kreg[39]),
    .QN(_0388_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1092_ (
    .CK(clk),
    .D(_0001_[40]),
    .Q(kreg[40]),
    .QN(_0389_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1093_ (
    .CK(clk),
    .D(_0001_[41]),
    .Q(kreg[41]),
    .QN(_0390_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1094_ (
    .CK(clk),
    .D(_0001_[42]),
    .Q(kreg[42]),
    .QN(_0391_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1095_ (
    .CK(clk),
    .D(_0001_[43]),
    .Q(kreg[43]),
    .QN(_0392_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1096_ (
    .CK(clk),
    .D(_0001_[44]),
    .Q(kreg[44]),
    .QN(_0393_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1097_ (
    .CK(clk),
    .D(_0001_[45]),
    .Q(kreg[45]),
    .QN(_0394_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1098_ (
    .CK(clk),
    .D(_0001_[46]),
    .Q(kreg[46]),
    .QN(_0395_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1099_ (
    .CK(clk),
    .D(_0001_[47]),
    .Q(kreg[47]),
    .QN(_0396_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1100_ (
    .CK(clk),
    .D(_0001_[48]),
    .Q(kreg[48]),
    .QN(_0397_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1101_ (
    .CK(clk),
    .D(_0001_[49]),
    .Q(kreg[49]),
    .QN(_0398_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1102_ (
    .CK(clk),
    .D(_0001_[50]),
    .Q(kreg[50]),
    .QN(_0399_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1103_ (
    .CK(clk),
    .D(_0001_[51]),
    .Q(kreg[51]),
    .QN(_0400_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1104_ (
    .CK(clk),
    .D(_0001_[52]),
    .Q(kreg[52]),
    .QN(_0401_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1105_ (
    .CK(clk),
    .D(_0001_[53]),
    .Q(kreg[53]),
    .QN(_0402_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1106_ (
    .CK(clk),
    .D(_0001_[54]),
    .Q(kreg[54]),
    .QN(_0403_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1107_ (
    .CK(clk),
    .D(_0001_[55]),
    .Q(kreg[55]),
    .QN(_0404_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1108_ (
    .CK(clk),
    .D(_0001_[56]),
    .Q(kreg[56]),
    .QN(_0405_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1109_ (
    .CK(clk),
    .D(_0001_[57]),
    .Q(kreg[57]),
    .QN(_0406_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1110_ (
    .CK(clk),
    .D(_0001_[58]),
    .Q(kreg[58]),
    .QN(_0407_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1111_ (
    .CK(clk),
    .D(_0001_[59]),
    .Q(kreg[59]),
    .QN(_0408_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1112_ (
    .CK(clk),
    .D(_0001_[60]),
    .Q(kreg[60]),
    .QN(_0409_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1113_ (
    .CK(clk),
    .D(_0001_[61]),
    .Q(kreg[61]),
    .QN(_0410_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1114_ (
    .CK(clk),
    .D(_0001_[62]),
    .Q(kreg[62]),
    .QN(_0411_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1115_ (
    .CK(clk),
    .D(_0001_[63]),
    .Q(kreg[63]),
    .QN(_0412_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1116_ (
    .CK(clk),
    .D(_0001_[64]),
    .Q(kreg[64]),
    .QN(_0413_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1117_ (
    .CK(clk),
    .D(_0001_[65]),
    .Q(kreg[65]),
    .QN(_0414_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1118_ (
    .CK(clk),
    .D(_0001_[66]),
    .Q(kreg[66]),
    .QN(_0415_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1119_ (
    .CK(clk),
    .D(_0001_[67]),
    .Q(kreg[67]),
    .QN(_0416_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1120_ (
    .CK(clk),
    .D(_0001_[68]),
    .Q(kreg[68]),
    .QN(_0417_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1121_ (
    .CK(clk),
    .D(_0001_[69]),
    .Q(kreg[69]),
    .QN(_0418_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1122_ (
    .CK(clk),
    .D(_0001_[70]),
    .Q(kreg[70]),
    .QN(_0419_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1123_ (
    .CK(clk),
    .D(_0001_[71]),
    .Q(kreg[71]),
    .QN(_0420_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1124_ (
    .CK(clk),
    .D(_0001_[72]),
    .Q(kreg[72]),
    .QN(_0421_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1125_ (
    .CK(clk),
    .D(_0001_[73]),
    .Q(kreg[73]),
    .QN(_0422_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1126_ (
    .CK(clk),
    .D(_0001_[74]),
    .Q(kreg[74]),
    .QN(_0423_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1127_ (
    .CK(clk),
    .D(_0001_[75]),
    .Q(kreg[75]),
    .QN(_0424_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1128_ (
    .CK(clk),
    .D(_0001_[76]),
    .Q(kreg[76]),
    .QN(_0425_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1129_ (
    .CK(clk),
    .D(_0001_[77]),
    .Q(kreg[77]),
    .QN(_0426_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1130_ (
    .CK(clk),
    .D(_0001_[78]),
    .Q(kreg[78]),
    .QN(_0427_)
  );
  (* src = "present_encrypt.v:85" *)
  DFF_X1 _1131_ (
    .CK(clk),
    .D(_0001_[79]),
    .Q(kreg[79]),
    .QN(_0428_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1132_ (
    .CK(clk),
    .D(_0000_[0]),
    .Q(dreg[0]),
    .QN(_0429_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1133_ (
    .CK(clk),
    .D(_0000_[1]),
    .Q(dreg[1]),
    .QN(_0430_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1134_ (
    .CK(clk),
    .D(_0000_[2]),
    .Q(dreg[2]),
    .QN(_0431_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1135_ (
    .CK(clk),
    .D(_0000_[3]),
    .Q(dreg[3]),
    .QN(_0432_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1136_ (
    .CK(clk),
    .D(_0000_[4]),
    .Q(dreg[4]),
    .QN(_0433_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1137_ (
    .CK(clk),
    .D(_0000_[5]),
    .Q(dreg[5]),
    .QN(_0434_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1138_ (
    .CK(clk),
    .D(_0000_[6]),
    .Q(dreg[6]),
    .QN(_0435_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1139_ (
    .CK(clk),
    .D(_0000_[7]),
    .Q(dreg[7]),
    .QN(_0436_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1140_ (
    .CK(clk),
    .D(_0000_[8]),
    .Q(dreg[8]),
    .QN(_0437_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1141_ (
    .CK(clk),
    .D(_0000_[9]),
    .Q(dreg[9]),
    .QN(_0438_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1142_ (
    .CK(clk),
    .D(_0000_[10]),
    .Q(dreg[10]),
    .QN(_0439_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1143_ (
    .CK(clk),
    .D(_0000_[11]),
    .Q(dreg[11]),
    .QN(_0440_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1144_ (
    .CK(clk),
    .D(_0000_[12]),
    .Q(dreg[12]),
    .QN(_0441_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1145_ (
    .CK(clk),
    .D(_0000_[13]),
    .Q(dreg[13]),
    .QN(_0442_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1146_ (
    .CK(clk),
    .D(_0000_[14]),
    .Q(dreg[14]),
    .QN(_0443_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1147_ (
    .CK(clk),
    .D(_0000_[15]),
    .Q(dreg[15]),
    .QN(_0444_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1148_ (
    .CK(clk),
    .D(_0000_[16]),
    .Q(dreg[16]),
    .QN(_0445_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1149_ (
    .CK(clk),
    .D(_0000_[17]),
    .Q(dreg[17]),
    .QN(_0446_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1150_ (
    .CK(clk),
    .D(_0000_[18]),
    .Q(dreg[18]),
    .QN(_0447_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1151_ (
    .CK(clk),
    .D(_0000_[19]),
    .Q(dreg[19]),
    .QN(_0448_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1152_ (
    .CK(clk),
    .D(_0000_[20]),
    .Q(dreg[20]),
    .QN(_0449_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1153_ (
    .CK(clk),
    .D(_0000_[21]),
    .Q(dreg[21]),
    .QN(_0450_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1154_ (
    .CK(clk),
    .D(_0000_[22]),
    .Q(dreg[22]),
    .QN(_0451_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1155_ (
    .CK(clk),
    .D(_0000_[23]),
    .Q(dreg[23]),
    .QN(_0452_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1156_ (
    .CK(clk),
    .D(_0000_[24]),
    .Q(dreg[24]),
    .QN(_0453_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1157_ (
    .CK(clk),
    .D(_0000_[25]),
    .Q(dreg[25]),
    .QN(_0454_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1158_ (
    .CK(clk),
    .D(_0000_[26]),
    .Q(dreg[26]),
    .QN(_0455_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1159_ (
    .CK(clk),
    .D(_0000_[27]),
    .Q(dreg[27]),
    .QN(_0456_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1160_ (
    .CK(clk),
    .D(_0000_[28]),
    .Q(dreg[28]),
    .QN(_0457_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1161_ (
    .CK(clk),
    .D(_0000_[29]),
    .Q(dreg[29]),
    .QN(_0458_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1162_ (
    .CK(clk),
    .D(_0000_[30]),
    .Q(dreg[30]),
    .QN(_0459_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1163_ (
    .CK(clk),
    .D(_0000_[31]),
    .Q(dreg[31]),
    .QN(_0460_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1164_ (
    .CK(clk),
    .D(_0000_[32]),
    .Q(dreg[32]),
    .QN(_0461_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1165_ (
    .CK(clk),
    .D(_0000_[33]),
    .Q(dreg[33]),
    .QN(_0462_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1166_ (
    .CK(clk),
    .D(_0000_[34]),
    .Q(dreg[34]),
    .QN(_0463_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1167_ (
    .CK(clk),
    .D(_0000_[35]),
    .Q(dreg[35]),
    .QN(_0464_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1168_ (
    .CK(clk),
    .D(_0000_[36]),
    .Q(dreg[36]),
    .QN(_0465_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1169_ (
    .CK(clk),
    .D(_0000_[37]),
    .Q(dreg[37]),
    .QN(_0466_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1170_ (
    .CK(clk),
    .D(_0000_[38]),
    .Q(dreg[38]),
    .QN(_0467_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1171_ (
    .CK(clk),
    .D(_0000_[39]),
    .Q(dreg[39]),
    .QN(_0468_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1172_ (
    .CK(clk),
    .D(_0000_[40]),
    .Q(dreg[40]),
    .QN(_0469_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1173_ (
    .CK(clk),
    .D(_0000_[41]),
    .Q(dreg[41]),
    .QN(_0470_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1174_ (
    .CK(clk),
    .D(_0000_[42]),
    .Q(dreg[42]),
    .QN(_0471_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1175_ (
    .CK(clk),
    .D(_0000_[43]),
    .Q(dreg[43]),
    .QN(_0472_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1176_ (
    .CK(clk),
    .D(_0000_[44]),
    .Q(dreg[44]),
    .QN(_0473_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1177_ (
    .CK(clk),
    .D(_0000_[45]),
    .Q(dreg[45]),
    .QN(_0474_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1178_ (
    .CK(clk),
    .D(_0000_[46]),
    .Q(dreg[46]),
    .QN(_0475_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1179_ (
    .CK(clk),
    .D(_0000_[47]),
    .Q(dreg[47]),
    .QN(_0476_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1180_ (
    .CK(clk),
    .D(_0000_[48]),
    .Q(dreg[48]),
    .QN(_0477_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1181_ (
    .CK(clk),
    .D(_0000_[49]),
    .Q(dreg[49]),
    .QN(_0478_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1182_ (
    .CK(clk),
    .D(_0000_[50]),
    .Q(dreg[50]),
    .QN(_0479_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1183_ (
    .CK(clk),
    .D(_0000_[51]),
    .Q(dreg[51]),
    .QN(_0480_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1184_ (
    .CK(clk),
    .D(_0000_[52]),
    .Q(dreg[52]),
    .QN(_0481_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1185_ (
    .CK(clk),
    .D(_0000_[53]),
    .Q(dreg[53]),
    .QN(_0482_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1186_ (
    .CK(clk),
    .D(_0000_[54]),
    .Q(dreg[54]),
    .QN(_0483_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1187_ (
    .CK(clk),
    .D(_0000_[55]),
    .Q(dreg[55]),
    .QN(_0484_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1188_ (
    .CK(clk),
    .D(_0000_[56]),
    .Q(dreg[56]),
    .QN(_0485_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1189_ (
    .CK(clk),
    .D(_0000_[57]),
    .Q(dreg[57]),
    .QN(_0486_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1190_ (
    .CK(clk),
    .D(_0000_[58]),
    .Q(dreg[58]),
    .QN(_0487_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1191_ (
    .CK(clk),
    .D(_0000_[59]),
    .Q(dreg[59]),
    .QN(_0488_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1192_ (
    .CK(clk),
    .D(_0000_[60]),
    .Q(dreg[60]),
    .QN(_0489_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1193_ (
    .CK(clk),
    .D(_0000_[61]),
    .Q(dreg[61]),
    .QN(_0490_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1194_ (
    .CK(clk),
    .D(_0000_[62]),
    .Q(dreg[62]),
    .QN(_0491_)
  );
  (* src = "present_encrypt.v:76" *)
  DFF_X1 _1195_ (
    .CK(clk),
    .D(_0000_[63]),
    .Q(dreg[63]),
    .QN(_0492_)
  );
  assign \USBOXKEY.idat  = kreg[18:15];
  assign dat1 = odat;
  assign kdat1 = { kreg[18:0], kreg[79:19] };
  assign { kdat2[79:20], kdat2[14:0] } = { \USBOXKEY.odat , kreg[14:0], kreg[79:39], kreg[33:19] };
  assign \sbox_loop[0].USBOX.idat  = odat[3:0];
  assign \sbox_loop[12].USBOX.idat  = odat[15:12];
  assign \sbox_loop[16].USBOX.idat  = odat[19:16];
  assign \sbox_loop[20].USBOX.idat  = odat[23:20];
  assign \sbox_loop[24].USBOX.idat  = odat[27:24];
  assign \sbox_loop[28].USBOX.idat  = odat[31:28];
  assign \sbox_loop[32].USBOX.idat  = odat[35:32];
  assign \sbox_loop[36].USBOX.idat  = odat[39:36];
  assign \sbox_loop[40].USBOX.idat  = odat[43:40];
  assign \sbox_loop[44].USBOX.idat  = odat[47:44];
  assign \sbox_loop[48].USBOX.idat  = odat[51:48];
  assign \sbox_loop[4].USBOX.idat  = odat[7:4];
  assign \sbox_loop[52].USBOX.idat  = odat[55:52];
  assign \sbox_loop[56].USBOX.idat  = odat[59:56];
  assign \sbox_loop[60].USBOX.idat  = odat[63:60];
  assign \sbox_loop[8].USBOX.idat  = odat[11:8];
endmodule
